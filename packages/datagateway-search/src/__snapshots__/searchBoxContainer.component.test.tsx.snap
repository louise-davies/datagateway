// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchBoxContainer - Tests renders searchBoxContainer correctly 1`] = `
<Styled(ForwardRef(Box))>
  <ForwardRef(Grid)
    container={true}
    direction="row"
    id="container-searchbox"
    justifyContent="center"
  >
    <ForwardRef(Grid)
      item={true}
      style={
        Object {
          "flexGrow": 1,
        }
      }
      xs="auto"
    >
      <SearchTextBox
        initiateSearch={[MockFunction]}
        onChange={[MockFunction]}
        searchText=""
      />
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      sx={
        Object {
          "marginTop": "8px",
        }
      }
    >
      <Connect(CheckboxesGroup) />
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      sx={
        Object {
          "marginTop": "8px",
        }
      }
    >
      <Connect(SelectDates)
        initiateSearch={[MockFunction]}
      />
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
      sx={
        Object {
          "display": "flex",
          "marginLeft": "6px",
          "marginTop": "24px",
        }
      }
    >
      <TranslatedSearchButton
        initiateSearch={[MockFunction]}
      />
    </ForwardRef(Grid)>
  </ForwardRef(Grid)>
  <div
    style={
      Object {
        "display": "flex",
      }
    }
  >
    <ForwardRef(Typography)
      sx={
        Object {
          "color": [Function],
          "fontSize": "14px",
          "textAlign": "left",
        }
      }
    >
      <Trans
        i18nKey="searchBox.examples_label"
        t={[Function]}
      >
        For example
        <ForwardRef(Link)
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "innerRef": [Function],
                "onClick": [Function],
                "replace": [Function],
                "target": [Function],
                "to": [Function],
              },
              "render": [Function],
            }
          }
          sx={
            Object {
              "fontWeight": "bold",
            }
          }
          to="searchBox.examples_label_link1"
        >
          "instrument calibration"
        </ForwardRef(Link)>
        or
         
        <ForwardRef(Link)
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "innerRef": [Function],
                "onClick": [Function],
                "replace": [Function],
                "target": [Function],
                "to": [Function],
              },
              "render": [Function],
            }
          }
          sx={
            Object {
              "fontWeight": "bold",
            }
          }
          to="searchBox.examples_label_link2"
        >
          neutron AND scattering
        </ForwardRef(Link)>
        .
      </Trans>
       
      <AdvancedHelpDialogue />
    </ForwardRef(Typography)>
    <ForwardRef(Box)
      sx={
        Object {
          "color": [Function],
          "fontSize": "14px",
          "marginLeft": "auto",
          "textAlign": "right",
        }
      }
    >
      <div
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexWrap": "nowrap",
          }
        }
      >
        <Memo(ForwardRef(InfoOutlinedIcon))
          fontSize="small"
          sx={
            Object {
              "color": [Function],
            }
          }
        />
         
        <ForwardRef(Typography)
          display="inline"
          sx={
            Object {
              "fontSize": "14px",
              "paddingLeft": "6px",
            }
          }
        >
          searchBox.limited_results_message {maxNumResults:{tabs:{datasetTab:false,datafileTab:false,investigationTab:false},selectAllSetting:true,settingsLoaded:false,sideLayout:false,searchableEntities:[investigation,dataset,datafile],maxNumResults:300}}
        </ForwardRef(Typography)>
      </div>
    </ForwardRef(Box)>
  </div>
</Styled(ForwardRef(Box))>
`;

exports[`SearchBoxContainerSide - Tests renders searchBoxContainerSide correctly 1`] = `
<ForwardRef(Grid)
  alignItems="stretch"
  container={true}
  direction="column"
  id="container-searchbox"
  justifyContent="flex-start"
>
  <ForwardRef(Grid)
    item={true}
  >
    <ForwardRef(Box)
      px={2}
    >
      <SearchTextBox
        initiateSearch={[MockFunction]}
        onChange={[MockFunction]}
        searchText=""
      />
    </ForwardRef(Box)>
  </ForwardRef(Grid)>
  <ForwardRef(Grid)
    item={true}
  >
    <ForwardRef(Box)
      px={2}
    >
      <Connect(SelectDates)
        initiateSearch={[MockFunction]}
      />
    </ForwardRef(Box)>
  </ForwardRef(Grid)>
  <ForwardRef(Grid)
    item={true}
  >
    <Connect(CheckboxesGroup) />
  </ForwardRef(Grid)>
  <ForwardRef(Grid)
    item={true}
  >
    <ForwardRef(Box)
      mx={5}
      pb={2}
    >
      <TranslatedSearchButton
        initiateSearch={[MockFunction]}
      />
    </ForwardRef(Box)>
  </ForwardRef(Grid)>
</ForwardRef(Grid)>
`;
